#
# Configuration
#
language: cpp
dist: bionic
sudo: true


#
# Install tools and libraries required for the project
#
script:
 - sudo apt-get update --quiet &&\
    apt-get install --no-install-recommends --no-install-suggests --yes  \
    software-properties-common apt-utils wget build-essential libboost-all-dev libhdf5-serial-dev libfftw3-dev libpugixml-dev libzmq3-dev


#
# Build Dependencies
#
before_script:

  #
  # Build Folder
  #
  - mkdir build
  - cd build

  #
  # Update / Install CMake
  #
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      mkdir -p external/cmake
      pushd external/cmake
      wget https://cmake.org/files/v3.12/cmake-3.12.4-Linux-x86_64.sh
      chmod +x cmake-*-Linux-x86_64.sh
      ./cmake-*-Linux-x86_64.sh --exclude-subdir --skip-license
      export PATH="${PWD}/bin:$PATH"
      popd
    else
      if ! brew ls --version cmake &>/dev/null; then brew update; brew install cmake; fi
    fi

#
# Install ISMRMRD
#
script:
- mkdir /opt/code &&\
    cd /opt/code && \
    git clone https://github.com/ismrmrd/ismrmrd.git && \
    cd ismrmrd && \
    mkdir build && \
    cd build && \
    cmake ../ && \
    make && \
    make install

#
# Install spdlog
#
script:
 - cd /opt/code && \
    git clone https://github.com/gabime/spdlog.git && \
    cd spdlog && \
    mkdir build && \
    cd build && \
    cmake ../ && \
    make && \
    make install

#
# Build Matrix
#
matrix:
  include:

 
  #
  # Git Check
  #
  - os: linux
    env:
      - TEST="Git Check"
    script:
      - |
        if [[ -n $(git diff --check HEAD^) ]]; then
          echo "You must remove whitespace before submitting a pull request"
          echo ""
          git diff --check HEAD^
          exit -1
        fi

  #
  # clang Format
  #
  - os: linux
    env:
      - TEST="clang Format"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-bionic-7.0
        packages:
          - clang-7.0
          - clang-format-7.0
          - gcc-7
          - g++-7
    script:
      - cmake -DENABLE_CLANG_FORMAT=ON -DCMAKE_CXX_COMPILER="g++-7" ..
      - make
      - make format > output.txt
      - |
        if [[ -n $(grep "warning: " output.txt) ]] || [[ -n $(grep "error: " output.txt) ]]; then
            echo "You must pass the clang format checks before submitting a pull request"
            echo ""
            grep --color -E '^|warning: |error: ' output.txt
            exit -1;
        else
            echo -e "\033[1;32m\xE2\x9C\x93 passed:\033[0m $1";
        fi

  #
  # Clang Tidy
  #
  - os: linux
    env:
      - TEST="Clang Tidy"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-bionic-7.0
        packages:
          - clang-7.0
          - clang-tidy-7.0
          - gcc-7
          - g++-7
    script:
      - cmake -DENABLE_CLANG_TIDY=ON -DCMAKE_CXX_COMPILER="g++-7" ..
      - make
      - make tidy > output.txt
      - |
        if [[ -n $(grep "warning: " output.txt) ]] || [[ -n $(grep "error: " output.txt) ]]; then
            echo "You must pass the clang tidy checks before submitting a pull request"
            echo ""
            grep --color -E '^|warning: |error: ' output.txt
            exit -1;
        else
            echo -e "\033[1;32m\xE2\x9C\x93 passed:\033[0m $1";
        fi

  #
  # CppCheck
  #
  - os: linux
    env:
      - TEST="CppCheck"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-7
          - g++-7
    script:
      - cmake -DENABLE_CPPCHECK=ON -DCMAKE_CXX_COMPILER="g++-7" ..
      - make
      - make check

  

  #
  # Google Address Sanitizer
  #
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-7
          - g++-7
    env:
      - TEST="Google Address Sanitizer"
    script:
      - cmake -DENABLE_ASAN=ON -DCMAKE_CXX_COMPILER="g++-7" ..
      - make
      - make test

  #
  # Google Undefined Sanitizer
  #
  - os: linux
    env:
      - TEST="Google Undefined Sanitizer"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-7
          - g++-7
    script:
      - cmake -DENABLE_USAN=ON -DCMAKE_CXX_COMPILER="g++-7" ..
      - make
      - make test

  #
  # Google Thread Sanitizer
  #
  - os: linux
    env:
      - TEST="Google Thread Sanitizer"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-7
          - g++-7
    script:
      - cmake -DENABLE_TSAN=ON -DCMAKE_CXX_COMPILER="g++-7" ..
      - make
      - make test

  #
  # Valgrind
  #
  - os: linux
    env:
      - TEST="Valgrind"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-7
          - g++-7
          - valgrind
    script:
      - cmake -DCMAKE_CXX_COMPILER="g++-7" ..
      - make
      - ctest -T memcheck


  #
  # G++ 7
  #
  - os: linux
    env:
      - TEST="G++ 7"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-7
          - g++-7
    script:
      - cmake -DCMAKE_CXX_COMPILER="g++-7" ..
      - make
      - make test

  
  #
  # Clang 7.0
  #
  - os: linux
    env:
      - TEST="Clang 7.0"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-bionic-7.0
        packages:
          - clang-7.0
          - gcc-7
          - g++-7
    script:
      - cmake -DCMAKE_C_COMPILER=clang-7.0 -DCMAKE_CXX_COMPILER=clang++-7 ..
      - make
      - make test

  
